# Kedis configuration file example.
#
# Note that in order to read the configuration file, kedis must be
# started with the file path as first argument:
#
# ./kedis-server -c /path/to/kedis.conf

################################## NETWORK #####################################

# By default, if no "bind" configuration directive is specified, Kedis listens
# for connections from all the network interfaces available on the server.
# It is possible to listen to just one or multiple selected interfaces using
# the "bind" configuration directive, followed by one or more IP addresses.
#
# bind 192.168.1.100 10.0.0.1
#

# Accept connections on the specified port, default is 6379.
port 6379

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0

################################# GENERAL #####################################

# By default Kedis does not run as a daemon. Use 'yes' if you need it.
# Note that Kedis will write a pid file in ./redis.pid when daemonized.
daemonize no

# set the pid file 
pidfile ./kedis.pid 

# Specify the server verbosity level.
# This can be one of:
# debug (a lot of information, useful for development/testing)
# info (many rarely useful info, but not a mess like the debug level)
# warning (moderately verbose, what you want in production probably)
# error (only very important / critical messages are logged)
loglevel info

# Specify the log path name.
logpath ./log

# Set the number of io threads. This number can not be changed after the server is started
io-thread-num 16

# Set the number of databases. The default database is DB 0, you can select
# a different one on a per-connection basis using SELECT <dbid> where
# dbid is a number between 0 and 'databases'-1
databases 16

# Set the name of database. The default name is kdb, all data files will be saved in this directory
db-name kdb

# Set the name of key count file
key-count-file key-count

# save binlog db file in this directory
binlog-dir binlog

# the maximum number of binlog command can be saved
binlog-capacity 1000000

# Require clients to issue AUTH <PASSWORD> before processing any other
# commands.  This might be useful in environments in which you do not trust
# others with access to the host running kedis-server.
#requirepass kvstore!@#$56

# Set the max number of connected clients at the same time.
maxclients 10000

################################# REPLICATION #################################

# Master-Slave replication. Use slaveof to make a Kedis instance a copy of
# another Kedis server. A few things to understand ASAP about Kedis replication.
#
# 1) Kedis replication is asynchronous
# 2) Kedis slaves are able to perform a partial resynchronization with the
#    master if the replication link is lost for a relatively small amount of
#    time.
# 3) Replication is automatic and does not need user intervention. After a
#    network partition slaves automatically try to reconnect to masters
#    and resynchronize with them.
#
# slaveof <masterip> <masterport>

# If the master is password protected (using the "requirepass" configuration
# directive below) it is possible to tell the slave to authenticate before
# starting the replication synchronization process, otherwise the master will
# refuse the slave request.
#
# masterauth <master-password>

# You can configure a slave instance to accept writes or not. Writing against
# a slave instance may be useful to store some ephemeral data (because data
# written on a slave will be easily deleted after resync with the master) but
# may also cause problems if clients are writing to it because of a misconfiguration.
#
# slave-read-only no

# The following option sets the replication timeout for:
#
# 1) Bulk transfer I/O during SYNC, from the point of view of slave.
# 2) Master timeout from the point of view of slaves (data, pings).
# 3) Slave timeout from the point of view of masters (REPLCONF ACK pings).
#
# It is important to make sure that this value is greater than the value
# specified for repl-ping-slave-period otherwise a timeout will be detected
# every time there is low traffic between the master and the slave.
#
# repl-timeout 60

################################## SLOW LOG ###################################

# The Kedis Slow Log is a system to log queries that exceeded a specified
# execution time. The execution time does not include the I/O operations
# like talking with the client, sending the reply and so forth,
# but just the time needed to actually execute the command
#
# You can configure the slow log with two parameters: one tells Kedis
# what is the execution time, in milliseconds, to exceed in order for the
# command to get logged, and the other parameter is the length of the
# slow log. When a new command is logged the oldest one is removed from the
# queue of logged commands.

# The following time is expressed in milliseconds, so 1000 is equivalent
# to one second. Note that a negative number disables the slow log, while
# a value of zero forces the logging of every command.
# slowlog-log-slower-than 10

# There is no limit to this length. Just be aware that it will consume memory.
# You can reclaim memory used by the slow log with SLOWLOG RESET.
# slowlog-max-len 128

############################### ADVANCED CONFIG ###############################

# HyperLogLog sparse representation bytes limit. The limit includes the
# 16 bytes header. When an HyperLogLog using the sparse representation crosses
# this limit, it is converted into the dense representation.
#
# A value greater than 16000 is totally useless, since at that point the
# dense representation is more memory efficient.
#
# The suggested value is ~ 3000 in order to have the benefits of
# the space efficient encoding without slowing down too much PFADD,
# which is O(N) with the sparse encoding. The value can be raised to
# ~ 10000 when CPU is not a concern, but space is, and the data set is
# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.
hll-sparse-max-bytes 3000
